version: '3.8'
services:
  nginx-service:
    image: 'nginx:stable-alpine'
    container_name: nginx-container
    ports:
      - '80:80'
    volumes:
      - './app:/var/www/project'
      - './nginx/default.conf:/etc/nginx/conf.d/default.conf'
    depends_on:
      - php82-service
      - postgres-service
    networks:
      - nginx-php82-postgres
  php82-service:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: php82-container
    ports:
      - '9000:9000'
    volumes:
      - './app:/var/www/project'
    env_file:
      - .env
    networks:
      - nginx-php82-postgres
  postgres-service:
    container_name: postgres-container
    image: postgres
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      PGDATA: /data/postgres
      PGUSER: '${POSTGRES_USER}'
    volumes:
      - ./postgres:/data/postgres
      - ./dumps/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    networks:
      - nginx-php82-postgres
    restart: always
  pgadmin-service:
    container_name: pgadmin-container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: '${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}'
      PGADMIN_DEFAULT_PASSWORD: '${PGADMIN_DEFAULT_PASSWORD:-secret}'
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - 'pgadmin:/var/lib/pgadmin'
    depends_on:
      - postgres-service
      - nginx-service
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    networks:
      - nginx-php82-postgres
    restart: unless-stopped
networks:
  nginx-php82-postgres:
    driver: bridge
volumes:
  postgres: null
  pgadmin: null
  dumps:
